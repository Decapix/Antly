# file for available category
from django.db import models

# ("what appears", "which allows you to choose"),

COUNTRY_CHOICES = (
    ("Afrique de l'Est", "East Africa"),
    ("Afrique de l'Ouest", "West Africa"),
    ("Afrique du Nord", "North Africa"),
    ("Algérie", "Algeria"),
    ("Australie", "Australia"),
    ("Bangladesh", "Bangladesh"),
    ("Belgique", "Belgium"),
    ("Bhoutan", "Bhutan"),
    ("Brunei", "Brunei"),
    ("Burundi", "Burundi"),
    ("Cambodge", "Cambodia"),
    ("Chine", "China"),
    ("Comores", "Comoros"),
    ("Corée", "Korea"),
    ("Corse", "Corsica"),
    ("Côte d'Ivoire", "Ivory Coast"),
    ("Espagne", "Spain"),
    ("Émirats Arabes Unis", "United Arab Emirates"),
    ("Égypte", "Egypt"),
    ("Éthiopie", "Ethiopia"),
    ("Europe Centrale", "Central Europe"),
    ("Europe de l'Est", "Eastern Europe"),
    ("Europe de l'Ouest", "Western Europe"),
    ("Europe du Nord", "Northern Europe"),
    ("Europe du Sud-Est", "Southeastern Europe"),
    ("France", "France"),
    ("Gambie", "Gambia"),
    ("Ghana", "Ghana"),
    ("Grèce", "Greece"),
    ("Inde", "India"),
    ("Indonésie", "Indonesia"),
    ("Iran", "Iran"),
    ("Irak", "Iraq"),
    ("Irlande", "Ireland"),
    ("Israël", "Israel"),
    ("Italie", "Italy"),
    ("Japon", "Japan"),
    ("Jordanie", "Jordan"),
    ("Kazakhstan", "Kazakhstan"),
    ("Kenya", "Kenya"),
    ("Laos", "Laos"),
    ("Liban", "Lebanon"),
    ("Liberia", "Liberia"),
    ("Libye", "Libya"),
    ("Luxembourg", "Luxembourg"),
    ("Madagascar", "Madagascar"),
    ("Malaisie", "Malaysia"),
    ("Maroc", "Morocco"),
    ("Mauritanie", "Mauritania"),
    ("Méditerranée", "Mediterranean"),
    ("Mongolie", "Mongolia"),
    ("Mozambique", "Mozambique"),
    ("Myanmar", "Myanmar"),
    ("Népal", "Nepal"),
    ("Nigeria", "Nigeria"),
    ("Nord de la France", "North France"),
    ("Nouvelle-Zélande", "New Zealand"),
    ("Océan Indien", "Indian Ocean"),
    ("Oman", "Oman"),
    ("Pakistan", "Pakistan"),
    ("Papouasie-Nouvelle-Guinée", "Papua New Guinea"),
    ("Philippines", "Philippines"),
    ("Polynésie française", "French Polynesia"),
    ("Portugal", "Portugal"),
    ("Qatar", "Qatar"),
    ("Russie", "Russia"),
    ("Rwanda", "Rwanda"),
    ("Samoa", "Samoa"),
    ("Scandinavie", "Scandinavia"),
    ("Sénégal", "Senegal"),
    ("Seychelles", "Seychelles"),
    ("Sicile", "Sicily"),
    ("Sierra Leone", "Sierra Leone"),
    ("Singapour", "Singapore"),
    ("Soudan", "Sudan"),
    ("Sri Lanka", "Sri Lanka"),
    ("Sud de la France", "South France"),
    ("Suisse", "Switzerland"),
    ("Syrie", "Syria"),
    ("Tadjikistan", "Tajikistan"),
    ("Tanzanie", "Tanzania"),
    ("Thaïlande", "Thailand"),
    ("Timor Oriental", "East Timor"),
    ("Togo", "Togo"),
    ("Tunisie", "Tunisia"),
    ("Turkménistan", "Turkmenistan"),
    ("Turquie", "Turkey"),
    ("Ukraine", "Ukraine"),
    ("Union Européenne", "European Union"),
    ("Uruguay", "Uruguay"),
    ("Vanuatu", "Vanuatu"),
    ("Vatican", "Vatican"),
    ("Venezuela", "Venezuela"),
    ("Viêt Nam", "Vietnam"),
    ("Yémen", "Yemen"),
    ("Zambie", "Zambia"),
    ("Zimbabwe", "Zimbabwe")
)

SPECE_CHOICES = [('Acamatus', 'Acamatus'), ('Acanthognathus', 'Acanthognathus'), ('Acanthomyops', 'Acanthomyops'),
                 ('Acanthostichus', 'Acanthostichus'), ('Acromyrmex', 'Acromyrmex'), ('Adetomyrma', 'Adetomyrma'),
                 ('Aenictus', 'Aenictus'), ('Amblyopone', 'Amblyopone'), ('Amblyteles', 'Amblyteles'),
                 ('Anergates', 'Anergates'), ('Anochetus', 'Anochetus'), ('Anonychomyrma', 'Anonychomyrma'),
                 ('Aphaenogaster', 'Aphaenogaster'), ('Asphinctanilloides', 'Asphinctanilloides'), ('Atta', 'Atta'),
                 ('Ateca', 'Ateca'), ('Brachymyrmex', 'Brachymyrmex'), ('Bothriomyrmex', 'Bothriomyrmex'),
                 ('Camponotus', 'Camponotus'), ('Cardiocondyla', 'Cardiocondyla'), ('Carebara', 'Carebara'),
                 ('Cephalotes', 'Cephalotes'), ('Cerapachys', 'Cerapachys'), ('Chelaner', 'Chelaner'),
                 ('Cheliomyrmex', 'Cheliomyrmex'), ('Colobopsis', 'Colobopsis'), ('Crematogaster', 'Crematogaster'),
                 ('Cryptocerus', 'Cryptocerus'), ('Cyphomyrmex', 'Cyphomyrmex'), ('Daceton', 'Daceton'),
                 ('Diacamma', 'Diacamma'), ('Dinoponera', 'Dinoponera'), ('Diplomorium', 'Diplomorium'),
                 ('Discothyrea', 'Discothyrea'), ('Dolichoderus', 'Dolichoderus'), ('Donisthorpea', 'Donisthorpea'),
                 ('Dorymyrmex', 'Dorymyrmex'), ('Dorylus', 'Dorylus'), ('Eciton', 'Eciton'), ('Ectatomma', 'Ectatomma'),
                 ('Ephebomyrmex', 'Ephebomyrmex'), ('Epoecus', 'Epoecus'), ('Epipheidole', 'Epipheidole'),
                 ('Erebomyrma', 'Erebomyrma'), ('Euponera', 'Euponera'), ('Forelius', 'Forelius'),
                 ('Formica', 'Formica'), ('Formicoxenus', 'Formicoxenus'), ('Gigantiops', 'Gigantiops'),
                 ('Harpagoxenus', 'Harpagoxenus'), ('Harpegnathos', 'Harpegnathos'), ('Holcoponera', 'Holcoponera'),
                 ('Hypoclinea', 'Hypoclinea'), ('Hypoponera', 'Hypoponera'), ('Ichnomyrmex', 'Ichnomyrmex'),
                 ('Iridomyrmex', 'Iridomyrmex'), ('Janetia ', 'Janetia '), ('Lasius', 'Lasius'),
                 ('Leptanilloides', 'Leptanilloides'), ('Leptogenys', 'Leptogenys'), ('Leptomyrmex', 'Leptomyrmex'),
                 ('Leptothorax', 'Leptothorax'), ('Linepithema', 'Linepithema'), ('Liometopum', 'Liometopum'),
                 ('Lobopelta', 'Lobopelta'), ('Macromischa', 'Macromischa'), ('Manica', 'Manica'),
                 ('Megaponera', 'Megaponera'), ('Melophorus', 'Melophorus'), ('Messor', 'Messor'),
                 ('Monomorium', 'Monomorium'), ('Myrmecia', 'Myrmecia'), ('Myrmecina', 'Myrmecina'),
                 ('Myrmecocystus', 'Myrmecocystus'), ('Myrmelachista', 'Myrmelachista'), ('Myrmica', 'Myrmica'),
                 ('Mystrium', 'Mystrium'), ('Neivamyrmex', 'Neivamyrmex'), ('Neoponera', 'Neoponera'),
                 ('Notoncus', 'Notoncus'), ('Odontomachus', 'Odontomachus'), ('Oecophylla', 'Oecophylla'),
                 ('Pachycondyla', 'Pachycondyla'), ('Paraponera', 'Paraponera'), ('Parasyscia', 'Parasyscia'),
                 ('Paratrechina', 'Paratrechina'), ('Peronomyrmex', 'Peronomyrmex'), ('Pheidole', 'Pheidole'),
                 ('Pheidologeton', 'Pheidologeton'), ('Pismire', 'Pismire'), ('Plagiolepis', 'Plagiolepis'),
                 ('Platythyrea', 'Platythyrea'), ('Pogonomyrmex', 'Pogonomyrmex'), ('Polyergus', 'Polyergus'),
                 ('Ponera', 'Ponera'), ('Prenolepis', 'Prenolepis'), ('Proceratium', 'Proceratium'),
                 ('Pseudomyrma', 'Pseudomyrma'), ('Pseudomyrmex', 'Pseudomyrmex'), ('Quartina', 'Quartina'),
                 ('Rhytidoponera', 'Rhytidoponera'), ('Rogeria', 'Rogeria'), ('Solenopsis', 'Solenopsis'),
                 ('Stenamma', 'Stenamma'), ('Stigmatomma', 'Stigmatomma'), ('Streblognathus', 'Streblognathus'),
                 ('Strongylognathus', 'Strongylognathus'), ('Strumigenys', 'Strumigenys'),
                 ('Sympheidole', 'Sympheidole'), ('Sysphincta', 'Sysphincta'), ('Tapinoma', 'Tapinoma'),
                 ('Technomyrmex', 'Technomyrmex'), ('Temnothorax', 'Temnothorax'), ('Tetramorium', 'Tetramorium'),
                 ('Tetraogmus', 'Tetraogmus'), ('Typhlomyrmex', 'Typhlomyrmex'), ('Tyrannomyrmex', 'Tyrannomyrmex'),
                 ('Wheeleriella', 'Wheeleriella'), ('Wasmannia', 'Wasmannia'), ('Xenomyrmex', 'Xenomyrmex'),
                 ('Xiphomyrmex', 'Xiphomyrmex')]
WORKER_CHOICES = [
    ("0", "0"),
    ("1 à 5", "1/5"),
    ("6 à 10", "6/10"),
    ("11 à 15", "11/15"),
    ("16 à 30", "16/30"),
    ("31 à 50", "31/50"),
    ("51 à 100", "51/100"),
    ("100 à 200", "100 à 200"),
    ("plus de 200", "+ 200"),
]

GYNE_CHOICES = [
    ("1", "1"),
    ("2", "2"),
    ("3", "3"),
    ("4", "4"),
    ("5", "5"),
    ("6", "6"),
    ("7", "7"),
    ("10", "10"),
    ("+ 10", "+ 10"),
]

NEST_SIZE = [
    ("Petit Plexi", "small-plastic"),
    ("Moyen Plexi", "medium-plastic"),
    ("Grand Plexi", "big-plastic"),
]

NEST_PRICE = {
    "Petit Plexi": 10,
    "Moyen Plexi": 12,
    "Grand Plexi": 14,

}


def nest_price_f(sizen):
    global NEST_PRICE
    for i in NEST_PRICE.keys():
        if i == sizen:
            return NEST_PRICE.get(i)
